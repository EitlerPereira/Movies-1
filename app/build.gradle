apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion 23
    buildToolsVersion "24.0.2"

    defaultConfig {
        applicationId "com.tobi.movies"
        minSdkVersion 19
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        testApplicationId "com.tobi.movies.steps"
        testInstrumentationRunner getInstrumentation()
    }
    buildTypes {

        applicationVariants.all { variant ->
            variant.buildConfigField "String", "API_KEY", "\"" + getApiKey() + "\""
        }

        debug {
            buildConfigField "String", "TEST_TAGS", "\"${getTestTags()}\""
            buildConfigField "String", "TEST_FEATURE", "\"${getTestFeature()}\""
            buildConfigField "String", "TEST_SCENARIO", "\"${getTestScenario()}\""
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
}

def getApiKey() {
    def Properties props = new Properties()
    props.load(new FileInputStream(new File('secrets.properties')))
    return props['API_KEY']
}

def getTestTags() {
    return project.hasProperty('tags') ? project.getProperties().get("tags") : ""
}

def getTestFeature() {
    return project.hasProperty('feature') ? project.getProperties().get("feature") : ""
}

def getTestScenario() {
    return project.hasProperty('scenario') ? project.getProperties().get("scenario") : ""
}

def getInstrumentation() {
    return project.hasProperty("cucumber") ? 'com.tobi.movies.utils.CucumberInstrumentation' : 'android.support.test.runner.AndroidJUnitRunner'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'com.android.support:appcompat-v7:23.4.0'
    compile 'com.android.support:design:23.4.0'
    compile 'com.squareup.retrofit2:retrofit:2.0.2'
    compile 'com.squareup.retrofit2:converter-gson:2.0.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.0'
    compile 'io.reactivex:rxjava:1.1.3'
    compile 'io.reactivex:rxandroid:1.1.0'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.android.support:support-v4:23.4.0'
    provided 'javax.annotation:javax.annotation-api:1.2'
    compile 'com.google.auto.value:auto-value:1.2'


    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'com.google.guava:guava:18.0'

    // Espresso and Cucumber
    androidTestCompile 'com.android.support:support-annotations:23.4.0'
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.4.1'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'
    androidTestCompile 'org.hamcrest:hamcrest-library:1.3'
    androidTestCompile 'info.cukes:cucumber-android:1.2.0@jar'
    androidTestCompile 'info.cukes:cucumber-picocontainer:1.2.0'
    androidTestCompile('com.android.support.test.espresso:espresso-contrib:2.2.1') {
        exclude module: 'support-annotations'
        exclude module: 'support-v4'
        exclude module: 'recyclerview-v7'
    }
}
